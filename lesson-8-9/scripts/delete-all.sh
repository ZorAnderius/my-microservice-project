#!/bin/bash

set -euo pipefail
set -x  # –£–≤—ñ–º–∫–Ω—É—Ç–∏ –ª–æ–≥—É–≤–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥

echo "=== [1/6] –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ –æ—á–∏—â–µ–Ω–Ω—è —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏ ==="

PROJECT_ROOT=$(git rev-parse --show-toplevel)
TERRAFORM_DIR="$PROJECT_ROOT/lesson-8-9/terraform"
S3_BACKEND_DIR="$PROJECT_ROOT/lesson-8-9/terraform/modules/s3-backend"

export VPC_ID=$(terraform -chdir="$TERRAFORM_DIR" output -raw vpc_id 2>/dev/null || echo "")
export AWS_REGION=$(terraform -chdir="$TERRAFORM_DIR" output -raw aws_region 2>/dev/null || echo "")

if [[ -z "$VPC_ID" || -z "$AWS_REGION" ]]; then
  echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ VPC ID –∞–±–æ —Ä–µ–≥—ñ–æ–Ω –∑ Terraform output."
  exit 1
fi

echo "‚úì VPC ID: $VPC_ID"
echo "‚úì Region: $AWS_REGION"

echo "=== [2/6] –í–∏–¥–∞–ª–µ–Ω–Ω—è Load Balancer-—ñ–≤, –Ω–µ –∫–µ—Ä–æ–≤–∞–Ω–∏—Ö Terraform ==="

# --- ALB/NLB (aws_lb) ---
ALL_LBS=$(aws elbv2 describe-load-balancers --region "$AWS_REGION" \
  --query "LoadBalancers[?VpcId=='$VPC_ID'].LoadBalancerArn" --output text || echo "")

TF_LBS=$(terraform -chdir="$TERRAFORM_DIR" state list | grep aws_lb || true)

TF_LB_ARNS=""
for lb in $TF_LBS; do
  ARN=$(terraform -chdir="$TERRAFORM_DIR" state show -no-color "$lb" 2>/dev/null | grep "arn =" | awk '{print $3}' || true)
  TF_LB_ARNS+="$ARN"$'\n'
done

for LB_ARN in $ALL_LBS; do
  if ! echo "$TF_LB_ARNS" | grep -q "$LB_ARN"; then
    echo "üóë –í–∏–¥–∞–ª—è—î–º–æ ALB/NLB (–Ω–µ Terraform): $LB_ARN"
    aws elbv2 delete-load-balancer --region "$AWS_REGION" --load-balancer-arn "$LB_ARN" || true
  else
    echo "‚úÖ ALB/NLB –∫–µ—Ä—É—î—Ç—å—Å—è Terraform: $LB_ARN"
  fi
done

# --- Classic ELB (aws_elb) ---
echo "=== [2.1/6] –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–ª–∞—Å–∏—á–Ω–∏—Ö Load Balancer-—ñ–≤ (ELB), –Ω–µ –∫–µ—Ä–æ–≤–∞–Ω–∏—Ö Terraform ==="

CLB_NAMES=$(aws elb describe-load-balancers --region "$AWS_REGION" \
  --query "LoadBalancerDescriptions[?VPCId=='$VPC_ID'].LoadBalancerName" --output text || echo "")

TF_CLBS=$(terraform -chdir="$TERRAFORM_DIR" state list | grep aws_elb || true)

TF_CLB_NAMES=""
for clb in $TF_CLBS; do
  name=$(terraform -chdir="$TERRAFORM_DIR" state show -no-color "$clb" 2>/dev/null | grep "name =" | awk '{print $3}' || true)
  TF_CLB_NAMES+="$name"$'\n'
done

for name in $CLB_NAMES; do
  if ! echo "$TF_CLB_NAMES" | grep -q "^$name$"; then
    echo "üóë –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å–∏—á–Ω–∏–π ELB (–Ω–µ Terraform): $name"
    aws elb delete-load-balancer --load-balancer-name "$name" --region "$AWS_REGION" || true
  else
    echo "‚úÖ ELB –∫–µ—Ä—É—î—Ç—å—Å—è Terraform: $name"
  fi
done

echo "–û—á—ñ–∫—É–≤–∞–Ω–Ω—è 20 —Å–µ–∫ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è Load Balancer-—ñ–≤..."
sleep 20

echo "=== [3/6] –í–∏–¥–∞–ª–µ–Ω–Ω—è Helm-—Ä–µ–ª—ñ–∑—ñ–≤ ==="

uninstall_helm_release() {
  local release_name=$1
  local namespace=$2

  if helm status "$release_name" -n "$namespace" &>/dev/null; then
    echo "üîª –í–∏–¥–∞–ª—è—î–º–æ Helm-—Ä–µ–ª—ñ–∑ '$release_name' —É namespace '$namespace'"
    helm uninstall "$release_name" -n "$namespace"
  else
    echo "‚úÖ Helm-—Ä–µ–ª—ñ–∑ '$release_name' –≤–∂–µ –Ω–µ —ñ—Å–Ω—É—î"
  fi
}

uninstall_helm_release "jenkins" "jenkins"
uninstall_helm_release "argocd" "argocd"

echo "=== [4/6] –í–∏–¥–∞–ª–µ–Ω–Ω—è namespace-—ñ–≤ ==="

delete_namespace() {
  local ns=$1
  if kubectl get ns "$ns" &>/dev/null; then
    echo "üóë –í–∏–¥–∞–ª—è—î–º–æ namespace '$ns'"
    kubectl delete ns "$ns" || true
  else
    echo "‚úÖ Namespace '$ns' –≤–∂–µ –≤–∏–¥–∞–ª–µ–Ω–∏–π"
  fi
}

delete_namespace "jenkins"
delete_namespace "argocd"

echo "=== [5/6] Terraform destroy ==="
cd "$TERRAFORM_DIR"
terraform destroy -auto-approve

echo "=== [6/6] –í–∏–¥–∞–ª–µ–Ω–Ω—è S3 backend ==="
cd "$S3_BACKEND_DIR"

BUCKET_NAME=$(terraform output -raw bucket_name 2>/dev/null || echo "")
if [[ -n "$BUCKET_NAME" ]]; then
  echo "üßπ –û—á–∏—â–µ–Ω–Ω—è –±–∞–∫–µ—Ç—É S3: $BUCKET_NAME"
  aws s3 rm "s3://$BUCKET_NAME" --recursive || true
else
  echo "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞–∑–≤—É S3 –±–∞–∫–µ—Ç—É"
fi

terraform destroy -auto-approve

echo "‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—î—ó —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏"
