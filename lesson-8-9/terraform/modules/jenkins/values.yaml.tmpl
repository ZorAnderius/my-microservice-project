controller:
  admin:
    username: admin
    password: admin123

  serviceType: LoadBalancer
  servicePort: 80
  service:
    port: 80
    targetPort: 8080

  resources:
    limits:
      cpu: "500m"
      memory: "1Gi"
    requests:
      cpu: "250m"
      memory: "512Mi"

  persistence:
    enabled: true
    storageClass: "ebs-sc"
    size: 10Gi

  installPlugins:
    - kubernetes:latest
    - workflow-aggregator:latest
    - git:latest
    - configuration-as-code:latest
    - credentials-binding:latest
    - github:latest
    - docker-plugin:latest
    - docker-workflow:latest
    - job-dsl:latest
    - pipeline-github-lib:latest
    - pipeline-model-definition:latest

  serviceAccount:
    name: jenkins-sa
    create: false

  envVars:
    - name: github_user
      value: "${github_user}"
    - name: github_token
      value: "${github_token}"
    - name: github_repo_url
      value: "${github_repo_url}"
    - name: github_branch
      value: "${github_branch}"

  JCasC:
    configScripts:
      credentials: |
        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      scope: GLOBAL
                      id: github-token
                      username: ${github_user}
                      password: ${github_token}
                      description: GitHub PAT

      seed-job: |
        jobs:
          - script: >
              job('seed-job') {
                description('Generates django-docker pipeline')

                scm {
                  git {
                    remote {
                      url("${github_repo_url}")
                      credentials("github-token")
                    }
                    branches("*/${github_branch}")
                  }
                }

                triggers {
                  cron('H/2 * * * *')
                }

                steps {
                  dsl {
                    text('''\
                      pipelineJob("django-docker") {
                        description("CI/CD pipeline for Django App")
                        definition {
                          cpsScm {
                            scriptPath("lesson-8-9/terraform/Jenkinsfile")
                            scm {
                              git {
                                remote {
                                  url("${github_repo_url}")
                                  credentials("github-token")
                                }
                                branches("*/${github_branch}")
                              }
                            }
                          }
                        }
                      }
                    ''')
                  }
                }

                publishers {
                  downstream('django-docker', 'SUCCESS')
                }
              }

